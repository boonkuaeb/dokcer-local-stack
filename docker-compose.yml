version: '2.1'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
    container_name: elasticsearch
    networks:
      - localstack-network
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - discovery.type=single-node

  kibana:
    image: docker.elastic.co/kibana/kibana:7.5.2
    container_name: kibana
    networks:
      - localstack-network
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    depends_on:
      - elasticsearch

  kafka-zookeeper:
    image: openzipkin/zipkin-kafka
    container_name: kafka-zookeeper
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=192.168.0.102
    networks:
      - localstack-network
    ports:
      - 2181:2181
      - 9092:9092
      - 19092:19092

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    networks:
      - localstack-network
    environment:
      - STORAGE_TYPE=elasticsearch
      - ES_HOSTS=elasticsearch:9200
      - KAFKA_BOOTSTRAP_SERVERS=kafka-zookeeper:9092
    ports:
      - 9411:9411
    depends_on:
      - elasticsearch
      - kafka-zookeeper

  # $ mongo
  mongodb:
    container_name: mongodb
    image: mongo:3.6.9
    mem_limit: 350m
    networks:
      - localstack-network
    ports:
      - "27017:27017"
    command: mongod --smallfiles
    healthcheck:
      test: "mongo --eval 'db.stats().ok'"
      interval: 20s
      timeout: 5s
      retries: 10

  # $ mysql -uroot -h127.0.0.1 -p
  mysql:
    image: mysql:8.0.20
    container_name: mysql
    mem_limit: 350m
    networks:
      - localstack-network
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpwd
    healthcheck:
      test: "/usr/bin/mysql --user=user --password=pwd --execute \"SHOW DATABASES;\""
      interval: 20s
      timeout: 5s
      retries: 10


networks:
  localstack-network:
    name: localstack-network